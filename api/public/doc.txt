Introduction

The index.php file is the entry point for the API. It defines the routes for the API and maps them to the appropriate controllers and actions.
Setting up the routes

The routes are defined using the Router class and the add() method. The add() method takes two arguments: the URL pattern and an array of options. The options array contains two keys: controller and action. The controller key specifies the name of the controller class that will handle the request, while the action key specifies the name of the method within the controller that will handle the request.

For example, the following line defines a route for the home page:

bash

$router->add('/', ['controller' => 'HomeController', 'action' => 'index']);

Grouping of routes

Routes can be grouped together using the group() method. The group() method takes two arguments: the URL pattern and an array of middleware. The URL pattern is used as a prefix for all the routes defined within the group. The middleware is an array of classes that will be executed before the route is handled.

For example, the following lines define a group of routes for the /user URL pattern:

csharp

$router->group('/user', ["MiddleWare"], function () use ($router) {
    // Route for the user index page
    $router->add('', ['controller' => 'User\UserController', 'action' => 'index']);
    // Route for a specific user page
    $router->add('/([0-9]+)', ['controller' => 'User\UserController', 'action' => 'show']);
    // Route for creating a new user
    $router->add('/create', ['controller' => 'User\UserController', 'action' => 'create']);
    // Route for updating an existing user
    $router->add('/([0-9]+)/update', ['controller' => 'User\UserController', 'action' => 'update']);
    // Route for deleting an existing user
    $router->add('/([0-9]+)/delete', ['controller' => 'User\UserController', 'action' => 'delete']);
});

Dispatching the URL

Once the routes have been defined, the URL is dispatched using the dispatch() method. The dispatch() method takes the URL as an argument and uses it to determine which route to handle.

For example:

bash

$router->dispatch($_SERVER['REQUEST_URI']);

Conclusion

This is a basic overview of how the index.php file works in this API. By understanding the routes, grouping of routes, and dispatching of URLs, you will be able to customize the API to fit your needs.